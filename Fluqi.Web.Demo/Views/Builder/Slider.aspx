<%@ Page Title="" Language="C#" MasterPageFile="~/Views/Shared/Builder.Master" Inherits="System.Web.Mvc.ViewPage<Fluqi.Models.SliderModel>" %>
<%@ Import Namespace="Fluqi.Web.Demo.Helpers" %>

<asp:Content ID="Content1" ContentPlaceHolderID="DemoMainContent" runat="server">
<script src="<%=Url.Content("~/Scripts/slider.js")%>" type="text/javascript"></script>
<%
	var sldr = Html.CreateSlider("sldr");
	this.Model.ConfigureSlider(sldr)	;
%>
	<label for="mypicker">Slider:</label>
	<br />

<%sldr.Render();%>
</asp:Content>



<asp:Content ID="Content2" ContentPlaceHolderID="DemoExampleContent" runat="server">
<%using (Html.BeginForm("Slider", "Builder")) {%>
	<input type="submit" value="UPDATE" />
	<ul class="small-label">
		<li><%=Html.LabelFor(vm=>vm.Disabled)    %><%=Html.CheckBoxFor(vm=>vm.Disabled, "Disables the slider is attached (can't be slid).")%></li>
		<li><%=Html.LabelFor(vm=>vm.Animated)    %><%=Html.TextBoxFor(vm=>vm.Animated, "Speed of the animation, can be 'fast', 'slow', 'normal' or a number of milliseconds.", "")%></li>
		<li><%=Html.LabelFor(vm=>vm.Min)         %><%=Html.TextBoxFor(vm=>vm.Min, "Minimum value of the slider.", "")%></li>
		<li><%=Html.LabelFor(vm=>vm.Max)         %><%=Html.TextBoxFor(vm=>vm.Max, "Maximum value of the slider.", "")%></li>
		<li><%=Html.LabelFor(vm=>vm.Orientation) %><%=Html.DropDownTipListFor(vm=>vm.Orientation, List.OrientationItems(), "Whether the slider is drawn vertically or horizontally.") %></li>
		<li><%=Html.LabelFor(vm=>vm.Range)       %><%=Html.TextBoxFor(vm=>vm.Range, "If set to true, the slider will detect if you have two handles and create a stylable range element between these two. Two other possible values are 'min' and 'max'. A min range goes from the slider min to one handle. A max range goes from one handle to the slider max.", "")%></li>
		<li><%=Html.LabelFor(vm=>vm.Step)        %><%=Html.TextBoxFor(vm=>vm.Step, "Determines the size or amount of each interval or step the slider takes between min and max. The full specified value range of the slider (max - min) needs to be evenly divisible by the step.", "")%></li>
		<li><%=Html.LabelFor(vm=>vm.Value)       %><%=Html.TextBoxFor(vm=>vm.Value, "Starting value of the slider.", "")%></li>
		<li><%=Html.LabelFor(vm=>vm.Values)      %><%=Html.TextBoxFor(vm=>vm.Values, "wide", "This option can be used to specify multiple handles. If range is set to true, the length of 'values' should be 2. (enter comma separated values)") %></li>
	</ul>
	<hr />
	<h2>Test Harness Options</h2>
	<ul>
		<li><%=Html.LabelFor(vm=>vm.showEvents)    %><%=Html.CheckBoxFor(vm=>vm.showEvents, "Shows how events are wired up.")%></li>
		<li><%=Html.LabelFor(vm=>vm.renderCSS)     %><%=Html.CheckBoxFor(vm=>vm.renderCSS, "Shows the CSS generated by jQuery UI (so non-JavaScript users still see the layout/colours).")%></li>
		<li><%=Html.LabelFor(vm=>vm.prettyRender)  %><%=Html.CheckBoxFor(vm=>vm.prettyRender, "Shows the rendered control/JavaScript in a readable layout.  Turn this option off to see the compressed version (which is the default in a RELEASE build).")%></li>
	</ul>
	<input type="submit" value="UPDATE" />
<%}//form %>
</asp:Content>



<asp:Content ID="Content3" ContentPlaceHolderID="DemoCodeContent" runat="server">
<%
	var sldr = Html.CreateSlider("sldr");
	this.Model.ConfigureSlider(sldr)	;
%>
<%=this.Model.CSharpCode(sldr)%>
</asp:Content>



<asp:Content ID="Content4" ContentPlaceHolderID="DemoHtmlContent" runat="server">
<%
	var sldr = Html.CreateSlider("sldr");
	this.Model.ConfigureSlider(sldr);

	sldr
		.Rendering
			.SetAutoScript(false)
		.Finish()
	.Render();
%>
</asp:Content>



<asp:Content ID="Content5" ContentPlaceHolderID="DemoJavaScriptCodeContent" runat="server">
<%
	var sldr = Html.CreateSlider("sldr");
	this.Model.ConfigureSlider(sldr)	;
%>
<%=this.Model.JavaScriptCode(sldr)%>
</asp:Content>



<asp:Content ID="Content6" ContentPlaceHolderID="DemoMethodsContent" runat="server">
	<ul class="horizontal">
		<li><button id="disable" title="Disables the slider.">Disable</button></li>
		<li><button id="enable" title="Enables the slider.">Enable</button></li>
		<li><button id="widget" title="Shows the HTML for the .ui-slider element.">Widget</button></li>
		<li><button id="getValue" title="Gets the value in the slider.">Get Value</button></li>
		<li><button id="setValue" title="Sets the value of the slider (to 50%).">Set Value</button></li>
		<li><button id="destroy" title="Returns the button to it's pre-init state.">Destroy</button></li>
	</ul>
<%
	var sldr = Html.CreateSlider("sldr");
	this.Model.ConfigureSlider(sldr)	;
%>
	<script type="text/javascript">
	$(document).ready(function() {
		$("#enable").click(function() { <%sldr.Methods.Enable();%>; });
		$("#disable").click(function() { <%sldr.Methods.Disable();%>; });
		$("#widget").click(function() { alert( "Widget HTML:\n\n" + <%sldr.Methods.Widget();%>.html() ); });
		$("#getValue").click(function() { alert( "GetValues reports:\n\n" + <%sldr.Methods.GetValue();%> ); });
		$("#setValue").click(function() { <%sldr.Methods.SetValue(50);%>; });
		$("#destroy").click(function() {  if (confirm("are you sure you want to destroy the slider?")) <%sldr.Methods.Destroy();%>; });
	});
	</script>
</asp:Content>

